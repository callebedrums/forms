
services:
  # mongodb:
  #   image: mongo:7.0.12
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: mfesR00tPass

  # postgres database used by keycloak
  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: formkeycloakpwd
      POSTGRES_USER: postgres
    volumes:
      - ./volumes/postgresql/data:/var/lib/postgresql/data
      - ./init/keycloak-init.sql:/docker-entrypoint-initdb.d/keycloak-init.sql # this sql file is executed during the first time postgres container is executed
  
  # pgadmin to manage postgres database in the development environment.
  pgadmin:
    image: dpage/pgadmin4:9.2.0
    labels:
      - "traefik.http.routers.pgadmin.rule=PathPrefix(`/pgadmin`)"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=8080"
    environment:
      PGADMIN_DEFAULT_EMAIL: callebedrums@gmail.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin
      PGADMIN_LISTEN_PORT: 8080
      SCRIPT_NAME: /pgadmin
    volumes:
      - ./volumes/pgadmin:/var/lib/pgadmin

  # keycloak to serve as Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.1
    labels:
      - "traefik.http.routers.keycloak.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.keycloak.middlewares=keycloak-stripprefix"
      - "traefik.http.middlewares.keycloak-stripprefix.stripprefix.prefixes=/auth"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloakpwd
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
      KC_HOSTNAME: http://localhost:8000/auth
      KC_HTTP_ENABLED: true
      KC_PROXY_HEADERS: xforwarded
    command: start-dev
    ports:
      - "9090:9000" 

  # forms backend
  backend:
    build: ./backend
    labels:
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.middlewares=backend-stripprefix"
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"

  # forms frontend
  frontend:
    build: ./frontend
    labels:
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"
    environment:
      HTTP_PORT: 8080
      FORMS_API: /api/forms
      FORMS_SERVICE_TYPE: api

  # reverse proxy entry point to the docker cluster
  reverse-proxy:
    image: traefik:v3.0.1
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "8000:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
